<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
       xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.1/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/3.1/mule-cxf.xsd">

    <description>
        This config builds a JAX-WS service with CXF.

        We use a "serviceClass" which is a JAX-WS interface we've defined. It allows us
        to ensure that the WSDL is only generated for the "echo" method (as opposed
        to all the other methods on the EchoComponent). This keeps our WSDL nice
        in clean - but it is not required.

        To invoke the Echo service hit the following URL -
            http://localhost:18083/services/Echo/text/hello

        To view the WSDL for the Echo service go to -
            http://localhost:18083/services/Echo?wsdl
    </description>

    <flow name="EchoFlow">
        <inbound-endpoint address="http://localhost:18083/services/Echo" exchange-pattern="request-response"/> 
        <message-properties-transformer scope="outbound">
            <add-message-property key="suffix" value="#[header:INBOUND:suffix]"/>
        </message-properties-transformer>
        <cxf:jaxws-service serviceClass="org.mule.example.echo.Echo"/>
        <component>
            <singleton-object class="org.mule.example.echo.Echo" />
        </component>
        <logger level="INFO" message="before sending"/>
        <logger level="INFO" />
        <logger level="INFO" message="payload is #[payload]"/>
        <vm:outbound-endpoint path="formatter" exchange-pattern="request-response"/>
    </flow>

    <flow name="formatter">
        <vm:inbound-endpoint path="formatter" exchange-pattern="request-response"/>
        <logger level="INFO" message="after arriving"/>
        <logger level="INFO"/>
        <expression-transformer>
            <return-argument expression="payload" evaluator="message"/>
            <return-argument evaluator="header" expression="INBOUND:suffix"/>
        </expression-transformer>
        <custom-transformer class="org.mule.example.echo.AppendAll"/>
    </flow>

</mule>
